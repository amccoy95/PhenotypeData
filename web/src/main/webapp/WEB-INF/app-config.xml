<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd

		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">


	<!-- Define the global parameters used when deploying without maven -->
	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="locations">
			<list>
				<value>file:${user.home}/configfiles/#{ systemProperties['profile'] }/application.properties</value>
			</list>
		</property>
	</bean>

	<context:component-scan base-package="uk.ac.ebi" />
	<context:component-scan base-package="org.mousephenotype.cda.solr" />
	<context:component-scan base-package="org.mousephenotype.cda.utilities" />
	<context:component-scan base-package="org.mousephenotype.cda.db">
		<context:exclude-filter type="annotation" expression="org.mousephenotype.cda.annotations.ComponentScanNonParticipant"/>
	</context:component-scan>

	<context:annotation-config />

	<!-- Get the datasources from the JNDI container -->
	<!-- <jee:jndi-lookup id="komp2DataSource"
					 jndi-name="java:comp/env/jdbc/komp2DataSource" expected-type="javax.sql.DataSource" />

	<jee:jndi-lookup id="admintoolsDataSource"
					 jndi-name="java:comp/env/jdbc/admintoolsDataSource" expected-type="javax.sql.DataSource" /> -->

<bean id="komp2DataSource" destroy-method="close"
  class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="url" value="${datasource.komp2.url}"/>
    <property name="username" value="${datasource.komp2.username}"/>
    <property name="password" value="${datasource.komp2.password}"/>
    <property name="initialSize" value="3"/>
    <property name="testOnBorrow" value="true" />
    <property name="validationQuery" value="SELECT 1" />
    <property name="removeAbandoned" value="true"/>
    <property name="removeAbandonedTimeout" value="60"/>
    <property name="logAbandoned" value="true"/>
</bean>

<bean id="admintoolsDataSource" destroy-method="close"
  class="org.apache.commons.dbcp.BasicDataSource">
    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
    <property name="url" value="${admintoolsurl}"/>
    <property name="username" value="${admintoolsusername}"/>
    <property name="password" value="${admintoolspassword}"/>
    <property name="initialSize" value="3"/>
    <property name="testOnBorrow" value="true" />
    <property name="validationQuery" value="SELECT 1" />
    <property name="removeAbandoned" value="true"/>
    <property name="removeAbandonedTimeout" value="60"/>
    <property name="logAbandoned" value="true"/>
</bean>



	<!-- Spring annotated objects -->
	<bean id="sessionFactory"
		  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="komp2DataSource" />
		<property name="packagesToScan" value="org.mousephenotype.cda.db" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.connection.useUnicode">true</prop>
				<prop key="hibernate.connection.charSet">UTF8</prop>
			</props>
		</property>
	</bean>

	<!-- Drives transactions using Hibernate APIs when requested -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Weaves in transactional advice around annotated Transactional methods -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!--this is the phenodigm DAO implementation we are looking for... -->
	<bean id="phenoDigmDao" class="uk.ac.ebi.phenodigm.dao.PhenoDigmWebDaoSolrImpl" />


	<bean id="globalConfiguration" class="org.springframework.beans.factory.config.MapFactoryBean">
		<property name="targetMapClass">
			<value>java.util.HashMap</value>
		</property>
		<property name="sourceMap">
			<map key-type="java.lang.String" value-type="java.lang.String">
				<!--<entry key="version" value="${pom.version}" />-->
				<entry key="baseUrl" value="${baseUrl}" />
				<entry key="drupalBaseUrl" value="${drupalBaseUrl}" />
				<entry key="solrUrl" value="${solrUrl}" />
				<entry key="internalSolrUrl" value="${internalSolrUrl}" />
				<entry key="mediaBaseUrl" value="${mediaBaseUrl}" />
				<entry key="impcMediaBaseUrl" value="${impcMediaBaseUrl}" />
				<entry key="monarchUrl" value="${monarchUrl}" />
				<entry key="pdfThumbnailUrl" value="${pdfThumbnailUrl}" />
				<entry key="googleAnalytics" value="${googleAnalytics}" />
				<entry key="liveSite" value="${liveSite}" />
			</map>
		</property>
	</bean>

	<!--  file upload -->
	<bean
  	class="org.springframework.web.servlet.view.InternalResourceViewResolver">
  		<property name="prefix">
   			<value>/WEB-INF/views/</value>
  		</property>
	  	<property name="suffix">
	   		<value>.jsp</value>
	  	</property>
 	</bean>

 	<bean id="multipartResolver"
  		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

</beans>



