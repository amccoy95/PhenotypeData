<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
    xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		">



	<!-- Define the global parameters used when deploying without maven -->
	<bean id="propertyPlaceholderConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:appConfig.properties</value>
			</list>
		</property>
	</bean>

	<context:component-scan base-package="uk.ac.ebi" />

	<context:component-scan base-package="org.mousephenotype.cda.db">
		<context:exclude-filter type="annotation" expression="org.mousephenotype.cda.annotations.ComponentScanNonParticipant"/>
	</context:component-scan>

	<context:component-scan base-package="org.mousephenotype.cda.solr" />

	<context:annotation-config />

	<!-- Get the datasources from the JNDI container -->
	<jee:jndi-lookup id="komp2DataSource"
					 jndi-name="java:comp/env/jdbc/komp2DataSource" expected-type="javax.sql.DataSource" />

	<jee:jndi-lookup id="admintoolsDataSource"
					 jndi-name="java:comp/env/jdbc/admintoolsDataSource" expected-type="javax.sql.DataSource" />

	<!-- Spring annotated objects -->
	<bean id="sessionFactory"
		  class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="komp2DataSource" />
		<property name="packagesToScan" value="org.mousephenotype.cda.db" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.connection.useUnicode">true</prop>
				<prop key="hibernate.connection.charSet">UTF8</prop>
			</props>
		</property>
	</bean>

	<!-- Drives transactions using Hibernate APIs when requested -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- Weaves in transactional advice around annotated Transactional methods -->
	<tx:annotation-driven transaction-manager="transactionManager" />


	<!--<bean id="obsSer" class="org.mousephenotype.cda.solr.service.ObservationService" />-->
	<!--<bean id="srSer" class="org.mousephenotype.cda.solr.service.StatisticalResultService">-->
		<!--<constructor-arg value="${internalSolrUrl}/statistical-result" />-->
		<!--<constructor-arg ref="phenotypePipelineDAO" />-->
	<!--</bean>-->

	<!--<bean id="postqcService_new" class="org.mousephenotype.cda.solr.service.PostQcService">-->
		<!--<constructor-arg value="${internalSolrUrl}/genotype-phenotype" />-->
		<!--<constructor-arg ref="phenotypePipelineDAO" />-->
	<!--</bean>-->

	<!-- Translates Hibernate exceptions to Spring Data Access Exceptions -->
	<!--<bean-->
		<!--class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />-->


	<!-- phenodigm external solr server via HTTP -->
	<!--<bean id="solrServer" class="org.apache.solr.client.solrj.impl.HttpSolrServer">-->
		<!--<constructor-arg index="0" value="${phenodigm.solrserver}" />-->
   	<!--<property name="soTimeout" value="5000" />-->
	<!--</bean>-->

    <!-- used for concurrently loading the solr server -->
  <!--<bean id="observationSolrServer" class="org.apache.solr.client.solrj.impl.ConcurrentUpdateSolrServer">-->
     <!--<constructor-arg index="0" value="${internalSolrUrl}/experiment"/>-->
     <!--<constructor-arg index="1" value="100000"/> &lt;!&ndash;Queue size&ndash;&gt;-->
     <!--<constructor-arg index="2" value="5"/> &lt;!&ndash;Num threads&ndash;&gt;-->
  <!--</bean>-->


	<!-- ======= Service BEANS ======= -->


	<!--<bean id="observationService" class="org.mousephenotype.cda.solr.service.ObservationService">-->
		<!--<constructor-arg value="${internalSolrUrl}/experiment" />-->
	<!--</bean>-->

	<!--<bean id="phenotypeCenterService" class="org.mousephenotype.cda.solr.service.PhenotypeCenterService">-->
		<!--<constructor-arg value="${internalSolrUrl}/experiment" />-->
	<!--</bean>-->

	<!--<bean id="preQcPhenotypeCenterService" class="org.mousephenotype.cda.solr.service.PhenotypeCenterService">-->
		<!--<constructor-arg value="${internalSolrUrl}/preqc" />-->
	<!--</bean>-->

  <!--<bean id="preqcService" class="org.mousephenotype.cda.solr.service.PreQcService">-->
		<!--<constructor-arg value="${internalSolrUrl}/preqc" />-->
		<!--<constructor-arg ref="phenotypePipelineDAO" />-->
	<!--</bean>-->

	<!--<bean id="postqcService" class="org.mousephenotype.cda.solr.service.PostQcService">-->
		<!--<constructor-arg value="${internalSolrUrl}/genotype-phenotype" />-->
		<!--<constructor-arg ref="phenotypePipelineDAO" />-->
	<!--</bean>-->

	<!--<bean id="experimentService" class="org.mousephenotype.cda.solr.service.ExperimentService">	</bean>-->

	<!--<bean id="statisticalResultService" class="org.mousephenotype.cda.solr.service.StatisticalResultService">-->
		<!--<constructor-arg value="${internalSolrUrl}/statistical-result" />-->
		<!--<constructor-arg ref="phenotypePipelineDAO" />-->
	<!--</bean>-->


	<!--<bean id="impressService" class="org.mousephenotype.cda.solr.service.ImpressService">-->
		<!--<constructor-arg value="${internalSolrUrl}/pipeline" />-->
	<!--</bean>-->

	<!--<bean id="imageService" class="org.mousephenotype.cda.solr.service.ImageService">-->
		<!--<constructor-arg value="${internalSolrUrl}/impc_images" />-->
	<!--</bean>-->

	<!--<bean id="expressionService" class="org.mousephenotype.cda.solr.service.ExpressionService">-->
		<!--<constructor-arg value="${internalSolrUrl}/experiment" />-->
		<!--<constructor-arg value="${internalSolrUrl}/impc_images" />-->
	<!--</bean>-->

	<!--<bean id="alleleService" class="org.mousephenotype.cda.solr.service.AlleleService">-->
		<!--<constructor-arg value="${internalSolrUrl}/allele" />-->
	<!--</bean>-->

	<!--<bean id="geneService" class="org.mousephenotype.cda.solr.service.GeneService">-->
		<!--<constructor-arg value="${internalSolrUrl}/gene" />-->
	<!--</bean>-->

	<!--<bean id="mpService" class="org.mousephenotype.cda.solr.service.MpService">-->
		<!--<constructor-arg value="${internalSolrUrl}/mp" />-->
	<!--</bean>-->

	<!--<bean id="diseaseService" class="org.mousephenotype.cda.solr.service.DiseaseService">-->
		<!--<constructor-arg value="${internalSolrUrl}/disease" />-->
	<!--</bean>-->


	<!-- ======= DAO BEANS ======= -->


	<!--<bean id="statisticalResultDAO" class="org.mousephenotype.cda.db.dao.StatisticalResultDAOImpl">-->
		<!--<constructor-arg ref="sessionFactory" />-->
	<!--</bean>-->

	<!--<bean id="releaseDAO" class="org.mousephenotype.cda.db.dao.AnalyticsDAOImpl">-->
		<!--<constructor-arg ref="sessionFactory" />-->
	<!--</bean>-->

	<!--<bean id="biologicalModelDAO" class="org.mousephenotype.cda.db.dao.BiologicalModelDAOImpl">-->
		<!--<constructor-arg ref="sessionFactory" />-->
	<!--</bean>-->

	<!-- <bean id="secondaryProjectService" class="org.mousephenotype.cda.db.dao.SecondaryProjectDAOImpl">
		<constructor-arg ref="sessionFactory" /> </bean> -->

	<!--<bean id="phenotypeCallSummaryDAO" class="org.mousephenotype.cda.db.dao.PhenotypeCallSummaryDAOImpl">-->
		<!--<constructor-arg ref="sessionFactory" />-->
	<!--</bean>-->

	<!--this is the phenodigm DAO implementation we are looking for... -->
	<bean id="phenoDigmWebDao" class="uk.ac.sanger.phenodigm2.dao.PhenoDigmWebDaoSolrImpl" />


  <!--<bean id="phenotypePipelineDAO" class="org.mousephenotype.cda.db.dao.PhenotypePipelineDAOImpl">-->
       <!--<constructor-arg ref="sessionFactory" />-->
  <!--</bean>-->

	<!--<bean id="phenSummary" class="uk.ac.ebi.phenotype.ontology.PhenotypeSummaryDAOImpl">-->
	<!--</bean>-->

	<!--<bean id="phenotypeCallSummaryDAOSolr" class="org.mousephenotype.cda.solr.generic.util.PhenotypeCallSummarySolr">-->
	<!--</bean>-->

	<!--<bean id="alleleDAO" class="org.mousephenotype.cda.db.dao.AlleleDAOImpl">-->
		<!--<constructor-arg ref="sessionFactory" />-->
	<!--</bean>-->

	<!--<bean id="genomicFeatureDAO" class="org.mousephenotype.cda.db.dao.GenomicFeatureDAOImpl">-->
		<!--<constructor-arg ref="sessionFactory" />-->
	<!--</bean>-->

	<!--<bean id="ontologyTermDAO" class="org.mousephenotype.cda.db.dao.OntologyTermDAOImpl">-->
		<!--<constructor-arg ref="sessionFactory" />-->
	<!--</bean>-->

	<!--<bean id="sequenceRegionDAO" class="org.mousephenotype.cda.db.dao.SequenceRegionDAOImpl">-->
		<!--<constructor-arg ref="sessionFactory" />-->
	<!--</bean>-->

	<!--<bean id="strainDAO" class="org.mousephenotype.cda.db.dao.StrainDAOImpl">-->
		<!--<constructor-arg ref="sessionFactory" />-->
	<!--</bean>-->

	<!--<bean id="datasourceDAO" class="org.mousephenotype.cda.db.dao.DatasourceDAOImpl">-->
		<!--<constructor-arg ref="sessionFactory" />-->
	<!--</bean>-->

	<!--<bean id="projectDAO" class="org.mousephenotype.cda.db.dao.ProjectDAOImpl">-->
		<!--<constructor-arg ref="sessionFactory" />-->
	<!--</bean>-->

	<!--<bean id="organisationDAO" class="org.mousephenotype.cda.db.dao.OrganisationDAOImpl">-->
		<!--<constructor-arg ref="sessionFactory" />-->
	<!--</bean>-->

	<!--<bean id="idg" class="SecondaryProjectService">-->
		<!--<constructor-arg ref="sessionFactory" />-->
	<!--</bean>-->

	<!--<bean id="threeI" class="uk.ac.ebi.phenotype.web.dao.SecondaryProject3iImpl">-->
	<!--</bean>-->



	<bean id="globalConfiguration" class="org.springframework.beans.factory.config.MapFactoryBean">
		<property name="targetMapClass">
			<value>java.util.HashMap</value>
		</property>
		<property name="sourceMap">
			<map key-type="java.lang.String" value-type="java.lang.String">
				<entry key="version" value="${pom.version}" />
				<entry key="baseUrl" value="${baseUrl}" />
				<entry key="drupalBaseUrl" value="${drupalBaseUrl}" />
				<entry key="solrUrl" value="${solrUrl}" />
				<entry key="internalSolrUrl" value="${internalSolrUrl}" />
				<entry key="mediaBaseUrl" value="${mediaBaseUrl}" />
				<entry key="impcMediaBaseUrl" value="${impcMediaBaseUrl}" />
				<entry key="pdfThumbnailUrl" value="${pdfThumbnailUrl}" />
				<entry key="googleAnalytics" value="${googleAnalytics}" />
				<entry key="liveSite" value="${liveSite}" />
			</map>
		</property>
	</bean>

	<!--  file upload -->
	<bean
  	class="org.springframework.web.servlet.view.InternalResourceViewResolver">
  		<property name="prefix">
   			<value>/WEB-INF/views/</value>
  		</property>
	  	<property name="suffix">
	   		<value>.jsp</value>
	  	</property>
 	</bean>

 	<bean id="multipartResolver"
  		class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

</beans>



